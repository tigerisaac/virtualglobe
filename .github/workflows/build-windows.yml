# .github/workflows/build-windows.yml
name: Build Windows Executable 

on:
  push:
    branches: [ "main" ] # Run on pushes to the main branch
  workflow_dispatch: # Allows manual triggering from the Actions tab

jobs:
  build:
    runs-on: windows-latest 

    steps:
  
    - name: Check out repository
      uses: actions/checkout@v4 

   
    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'


    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    
    - name: Build executable with PyInstaller
      run: |
        # Find the site-packages directory dynamically
        $site_packages_path = python -c "import site; print(site.getsitepackages()[0])"
        Write-Host "Found site-packages at: $site_packages_path"

        # Construct the path to mediapipe modules
        $mediapipe_modules_path = Join-Path $site_packages_path "mediapipe\modules"
        Write-Host "Using MediaPipe modules path: $mediapipe_modules_path"

        # Check if the templates directory exists
        if (-not (Test-Path -Path "templates" -PathType Container)) {
          Write-Error "Error: 'templates' directory not found in repository root."
          exit 1
        }
        # Check if the mediapipe modules path exists
         if (-not (Test-Path -Path $mediapipe_modules_path -PathType Container)) {
           Write-Error "Error: MediaPipe modules directory not found at calculated path: $mediapipe_modules_path. Installation might have failed or path is wrong."
           exit 1
         }

        # Run PyInstaller command (using PowerShell syntax for variables)
        # Using --onefile mode here. Remove if you want a folder output.
        pyinstaller --noconfirm --onefile --name HandEyeGlobeApp `
          --add-data "$($mediapipe_modules_path);mediapipe\modules" `
          --add-data "templates;templates" `
          main.py
      shell: pwsh 

   
    - name: Upload Windows Executable Artifact
      uses: actions/upload-artifact@v4
      with:
        name: HandEyeGlobeApp-Windows # Name of the artifact zip file
        path: dist/HandEyeGlobeApp.exe # Path to the single executable created by --onefile
        if-no-files-found: error # Fail the workflow if the executable wasn't created
